/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        u: u {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp U>;
            label = "U";
        };

        U_: U_ {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp LS(U)>;
            label = "U_";
        };

        a: a_ {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp A>;
            label = "A_";
        };

        A_: A_ {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp LS(A)>;
            label = "A_";
        };

        o: o {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp O>;
            label = "O";
        };

        O_: O_ {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp LS(O)>;
            label = "O_";
        };
    };

    behaviors {
        um_u: um_u {
            compatible = "zmk,behavior-tap-dance";
            label = "UM_U";
            #binding-cells = <0>;
            bindings = <&u>, <&U_>;
        };

        bt_ly: bt_ly {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_LY";
            #binding-cells = <0>;
            bindings = <&caps_word>, <&sl 4>;
        };

        numpad: numpad {
            compatible = "zmk,behavior-tap-dance";
            label = "NUMPAD";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&mo 3>;
        };

        um_a: um_a {
            compatible = "zmk,behavior-tap-dance";
            label = "UM_A";
            #binding-cells = <0>;
            bindings = <&a>, <&A_>;
        };

        um_o: um_o {
            compatible = "zmk,behavior-tap-dance";
            label = "UM_O";
            #binding-cells = <0>;
            bindings = <&o>, <&O_>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&mt GRAVE ESCAPE  &kp Q           &kp W           &kp E        &kp R             &kp T      &kp Z    &kp U              &kp I                        &kp O            &kp P               &kp APOS
&kp TAB           &mt LEFT_GUI A  &mt LEFT_ALT S  &mt LCTRL D  &mt LEFT_SHIFT F  &kp G      &kp H    &mt RIGHT_SHIFT J  &mt RCTRL K                  &mt RIGHT_ALT L  &mt RIGHT_GUI SEMI  &mt RIGHT_BRACKET LEFT_BRACKET
&bt_ly            &kp Y           &kp X           &kp C        &kp V             &kp B      &kp N    &kp M              &kp COMMA                    &kp DOT          &kp FSLH            &kp MINUS
                                                  &kp SPACE    &kp BACKSPACE     &numpad    &kp RET  &mo 2              &mt LA(LC(SPACE)) LG(SPACE)
            >;
        };

        numpad {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N7        &kp N7        &kp N9        &kp ASTERISK  &kp LEFT_BRACE         &kp RIGHT_BRACE
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp EQUAL     &mt LCMD LEFT_BRACKET  &mt LEFT_SHIFT RIGHT_BRACKET
&kp LSHFT   &trans        &trans        &trans        &trans        &trans          &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp MINUS     &kp LEFT_PARENTHESIS   &kp RIGHT_PARENTHESIS
                                        &kp LGUI      &trans        &kp SPACE       &kp RET       &trans        &kp N0
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&kp TAB    &kp EXCL  &kp AT     &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &um_a     &kp LA(S)  &um_u     &um_o     &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans     &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                                &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        numpad-shifted {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &trans       &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LS(N4)  &kp LS(N5)  &kp LS(N6)  &key_repeat  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &trans       &trans  &trans
                        &trans  &trans  &trans    &trans      &trans      &trans
            >;
        };

        layer_4 {
            bindings = <
&bt BT_PRV    &bt BT_NXT    &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR    &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                          &trans        &trans        &trans    &trans  &trans  &trans
            >;
        };
    };
};
