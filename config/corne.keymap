/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        umlu: u {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp U>;
            label = "U";
        };

        umua: umua {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp A>;
            label = "UMUA";
        };

        umlo: umlo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp O>;
            label = "UMLO";
        };

        alt_u_shift_a: alt_u_shift_a {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LALT &kp U &kp LSFT &kp A>;
            label = "ALT_U_SHIFT_A";
        };
    };

    behaviors {
        caps_blue: caps_blue {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPS_BLUE";
            #binding-cells = <0>;
            bindings = <&caps_word>, <&sl 3>;
        };

        tap_a: tap_a {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_A";
            #binding-cells = <0>;
            bindings = <&umua>, <&alt_u_shift_a>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&mt GRAVE ESCAPE  &kp Q           &kp W           &kp E        &kp R             &kp T            &kp Z    &kp U              &kp I                        &kp O            &kp P               &kp BSPC
&kp TAB           &mt LEFT_GUI A  &mt LEFT_ALT S  &mt LCTRL D  &mt LEFT_SHIFT F  &kp G            &kp H    &mt RIGHT_SHIFT J  &mt RCTRL K                  &mt RIGHT_ALT L  &mt RIGHT_GUI SEMI  &kp SQT
&caps_blue        &kp Y           &kp X           &kp C        &kp V             &kp B            &kp N    &kp M              &kp COMMA                    &kp DOT          &kp FSLH            &kp ESC
                                                  &mo 1        &lt 1 SPACE       &kp BACKSPACE    &kp RET  &mo 2              &mt LA(LC(SPACE)) LG(SPACE)
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&kp TAB    &kp N1  &kp N2     &kp LS(LG(N2))  &kp LS(LG(T))  &kp LG(LS(N5))    &kp N7        &kp N7        &kp N9        &kp ASTERISK  &kp LEFT_BRACE         &kp RIGHT_BRACE
&kp SPACE  &tap_a  &kp LA(S)  &kp SPACE       &kp SPACE      &kp SPACE         &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp EQUAL     &mt LCMD LEFT_BRACKET  &mt LEFT_SHIFT RIGHT_BRACKET
&kp LSHFT  &trans  &trans     &trans          &trans         &trans            &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp MINUS     &kp LEFT_PARENTHESIS   &kp RIGHT_PARENTHESIS
                              &kp LGUI        &mo 4          &kp SPACE         &kp RET       &trans        &kp N0
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET     &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &umlu     &trans  &umlu     &trans    &trans       &kp UP_ARROW  &kp LEFT  &kp RIGHT        &kp DOWN  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER     &kp PLUS  &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET       &trans    &kp RALT
            >;
        };

        bluetooth_layer {
            bindings = <
&trans        &trans        &trans        &trans        &bt BT_PRV    &bt BT_NXT    &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans        &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR    &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans
                                          &trans        &trans        &trans        &trans  &trans  &trans
            >;
        };

        shiftednum_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LS(N4)  &kp LS(N5)  &kp LS(N6)  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LS(N1)  &kp RS(N2)  &kp LS(N3)  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans      &trans      &trans
            >;
        };
    };
};
